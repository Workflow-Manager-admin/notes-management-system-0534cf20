{"is_source_file": true, "format": "Python (FastAPI)", "description": "Main source file for the notes management backend, implementing user authentication (registration, login) and CRUD operations for notes with JWT-based auth. Defines data models, schemas, API routes, and middleware setup.", "external_files": ["sqlite:///./notes.db"], "external_methods": ["jwt.encode", "jwt.decode", "create_engine", "sessionmaker", "CryptContext.verify", "CryptContext.hash"], "published": ["app", "get_current_user", "register", "login", "create_note", "list_notes", "get_note", "update_note", "delete_note", "health_check"], "classes": [{"name": "User", "description": "SQLAlchemy model representing users with unique username and hashed password, related to notes."}, {"name": "Note", "description": "SQLAlchemy model representing notes with title, content, owner relationship."}, {"name": "UserCreate", "description": "Pydantic schema for user registration data."}, {"name": "Token", "description": "Pydantic schema for JWT token response."}, {"name": "TokenData", "description": "Schema for decoded JWT token data."}, {"name": "NoteCreate", "description": "Schema for creating a new note."}, {"name": "NoteUpdate", "description": "Schema for updating existing notes."}, {"name": "NoteOut", "description": "Schema for outputting note data."}], "methods": [{"name": "get_db()", "description": "Provides a database session to route functions.", "scope": "", "scopeKind": ""}, {"name": "verify_password(plain_password, hashed_password)", "description": "Verifies plaintext password against hashed password.", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Hashes a plaintext password.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[datetime.timedelta] = None)", "description": "Generates a JWT token with expiration.", "scope": "", "scopeKind": ""}, {"name": "User get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Retrieves current user based on JWT token, used as dependency.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Simple endpoint to check API health.", "scope": "", "scopeKind": ""}, {"name": "register(user: UserCreate, db: Session = Depends(get_db))", "description": "Endpoint to register new users and return JWT token.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Endpoint for user login, returning JWT token.", "scope": "", "scopeKind": ""}, {"name": "create_note(note: NoteCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Creates a new note for authenticated user.", "scope": "", "scopeKind": ""}, {"name": "list_notes(current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Lists all notes for authenticated user.", "scope": "", "scopeKind": ""}, {"name": "get_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Retrieves a specific note owned by user.", "scope": "", "scopeKind": ""}, {"name": "update_note(note_id: int, note_update: NoteUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Updates a note owned by user.", "scope": "", "scopeKind": ""}, {"name": "delete_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Deletes a note owned by user.", "scope": "", "scopeKind": ""}], "calls": ["jwt.encode", "jwt.decode", "create_engine", "sessionmaker", "pwd_context.verify", "pwd_context.hash"], "search-terms": ["FastAPI main app", "JWT authentication", "SQLite notes database", "User registration endpoint", "Notes CRUD endpoints", "get_current_user dependency", "SQLAlchemy models for user and note"], "state": 2, "file_id": 4, "knowledge_revision": 10, "git_revision": "31fcef3674d2dc7c91900940f217af200295d095", "revision_history": [{"9": "31fcef3674d2dc7c91900940f217af200295d095"}, {"10": "31fcef3674d2dc7c91900940f217af200295d095"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = 30$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^DATABASE_URL = \"sqlite:\\/\\/\\/.\\/notes.db\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^class Note(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteOut", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^class NoteOut(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^class NoteUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^SECRET_KEY = \"CHANGE_THIS_SECRET\"  # Ideally from env file!$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^SessionLocal = sessionmaker(bind=engine, autocommit=False, autoflush=False)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TokenData", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^class TokenData(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^class User(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserCreate", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^class UserCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    __tablename__ = \"notes\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    __tablename__ = \"users\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    content = Column(Text, nullable=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = Field(\"\", description=\"Content of the note\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteCreate", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[datetime.timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[datetime.timedelta] = None)"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def create_note(note: NoteCreate, current_user: User = Depends(get_current_user), db: Session = /", "language": "Python", "kind": "function", "signature": "(note: NoteCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def delete_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depe/", "language": "Python", "kind": "function", "signature": "(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^engine = create_engine(DATABASE_URL, connect_args={\"check_same_thread\": False})$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)) -> User/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def get_note(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends/", "language": "Python", "kind": "function", "signature": "(note_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "hashed_password", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    hashed_password = Column(String(256), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def list_notes(current_user: User = Depends(get_current_user), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    notes = relationship(\"Note\", back_populates=\"owner\")$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "orm_mode", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^        orm_mode = True$/", "language": "Python", "kind": "variable", "scope": "NoteOut.Config", "scopeKind": "class"}, {"_type": "tag", "name": "owner", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    owner = relationship(\"User\", back_populates=\"notes\")$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "owner_id", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    owner_id = Column(Integer, ForeignKey(\"users.id\"), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., description=\"Password for user\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def register(user: UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user: UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    title = Column(String(256), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., description=\"Title of the note\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteCreate", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def update_note(note_id: int, note_update: NoteUpdate, current_user: User = Depends(get_current_/", "language": "Python", "kind": "function", "signature": "(note_id: int, note_update: NoteUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    username = Column(String(128), unique=True, index=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    username: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "TokenData", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^    username: str = Field(..., description=\"Unique username for registration\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/notes-management-system-0534cf20/notes_backend/src/api/main.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "d16508ccf06ddbca8501cf7f56bf5da1", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = 30", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DATABASE_URL = \"sqlite:\\/\\/\\/.\\/notes.db\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = \"CHANGE_THIS_SECRET\"  # Ideally from env file!", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(bind=engine, autocommit=False, autoflush=False)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tablename__ = \"notes\"", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = \"users\"", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "content = Column(Text, nullable=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] content", "scope": "NoteCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "engine = create_engine(DATABASE_URL, connect_args={\"check_same_thread\": False})", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "hashed_password = Column(String(256), nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "id = Column(Integer, primary_key=True, index=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "notes = relationship(\"Note\", back_populates=\"owner\")", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "orm_mode = True", "scope": "NoteOut.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "owner = relationship(\"User\", back_populates=\"notes\")", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "owner_id = Column(Integer, ForeignKey(\"users.id\"), nullable=False)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "str password", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "title = Column(String(256), nullable=False)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str title", "scope": "NoteCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "username = Column(String(128), unique=True, index=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] username", "scope": "TokenData", "scopeKind": "class", "description": "unavailable"}, {"name": "str username", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}]}